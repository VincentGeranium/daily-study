
# coding: utf-8

# # SET 집합 자료형
#  - 집합에 관련된 것들을 쉽게 처리하기 위해 만들어진 자료형
#  - 집합 자료형은 다음과 같이 set 키워드를 이용해 만들 수 있다.

# In[2]:


s1 = set([1,2,3])
s1
#이와 같이 set()의 괄호 안에 리스트를 입력하여 만들 수 있다


# In[4]:


s2 = set("Hello")
s2
#문자열을 입력하여 만들 수 도있다


# ## 집합 자료형의 특징
#  - 중복을 허용하지 않는다
#  - 순서가 없다(Unordered)

# - 리스트나 튜플은 순서가 있기(Ordered) 때문에 인덱싱을 통해 자료형의 값을 얻을 수 있지만
#   set자료형은 순서가 없기(Unordered) 때문에 인덱싱으로 값을 얻을 수 없다
#   이는 딕셔너리와 비슷하다. 딕셔너리 역시 순서가 없는 자료형이라 인덱싱을 지원하지 않는다.

#  - 만약 set자료형에 저장된 값을 인덱싱으로 접근하려면 다음과 같이 리스트나 튜플로 변환한 후
#    해야 한다.

#  - !! 중복을 허용하지 않는 set의 특징은 자료형의 중복을 제거하기 위한 필터 역활로 종종 사용된다.

# In[5]:


s1 = set([1,2,3])
l1 = list(s1)
l1


# In[6]:


l1[0]


# In[7]:


t1 = tuple(s1)
t1


# In[8]:


t1[0]


# In[9]:


t1[2]


# ## 집합 자료형 활용하는 방법
# --------------------------------------------------------------------------

# ### 교집합 , 합집합 , 차집합 구하기

# set 자료형이 정말 유용하게 사용되는 경우는 다음과 같이 교집합, 합집합 , 차집합을 구할 때 이다.

# In[10]:


s1 = set([1,2,3,4,5,6])
s2 = set([4,5,6,7,8,9])


# ##### 1. 교집합
# s1과 s2의 교집합을 구해 보자.

# In[11]:


s1 & s2


# - "&" 기호를 이용하면 교집합을 간단히 구할 수 있다.
# - 또는 다음과 같이 intersection 함수를 사용해도 동일한 결과를 리턴한다.
# - s2.intersection(s1)을 사용해도 결과는 같다.

# In[12]:


s1.intersection(s2)


# ##### 2.차집합
# 차집합은 다음과 같이 구할 수 있다.

# In[13]:


s1 - s2


# In[14]:


s2 - s1


# In[15]:


s1.difference(s2)


# In[16]:


s2.difference(s1)


# # 집합 자료형 관련 함수들
# --------------------------------------------------------------------------

# #### 값 1개 추가하기 (add)
# 이미 만들어진 set자료형에 값을 추가할 수 있다. 1개의 값만 추가(add)할 경우에는 아래와 같이 한다.

# In[17]:


s1 = set([1,2,3])
s1.add(4)
s1


# #### 값 여러개 추가하기 (update)
# 여러 개의 값을 한꺼번에 추가(update)할 때는 다음과 같이 하면 된다.

# In[18]:


s1 = set([1,2,3])
s1.update([4,5,6])
s1


# #### 특정 값 제거하기(remove)
# 특정 값을 제거하고 싶을 때는 아래와 같이 하면 된다.

# In[19]:


s1 = set([1,2,3])
s1.remove(2)
s1


# ### 연습문제

# In[20]:


#집합 만들기 1
# 리스트를 집합 자료형으로 만드시오.
q1 = set(["a","b","c"])
q1


# In[54]:


#문제2 집합의 중복
#중복을 허용하지 않는 집합 자료형의 특징을 이용하여 다음a 리스트에서 중복된 숫자들을 제거
a = [1,1,1,2,2,3,3,3,4,4,5]
q2 = set(a)
q2
#내 풀이


# In[55]:


#책 답지 풀이
a = [1,1,1,2,2,3,3,3,4,4,5]
aSet = set(a) #a 리스트를 집합자료형으로 변환
b = list(aSet)#집합자료형을 리스트 자료형으로 다시 변환
print(b)


# In[24]:


#문제3 차집합
#다음과 같은 2개의 집합 자료형이 있다. s1집합의 항목 중 s2집합에 포함된 항목을 제거
s1 = set(["a","b","c","d","e"])
s2 = set(["c","d","e","f","g"])


# In[25]:


s1-s2


# In[26]:


s1.difference(s2)


# In[27]:


#문제4 집합 만들기2
#집합 자료형은 다음과 같이 만들 수 있다
a = {"a","b","c"}
a


# In[28]:


type(a)


# In[29]:


#값이 하나도 없는 비어있는 set을 만들기 위해 다음과 같이 시도 해 보자.


# In[30]:


a = {}
type(a)


# In[57]:


#위와 같이 값이 있을 경우에는 집합 자료형으로 인식했지만 값이 없을 경우에는 
#딕셔너리로 인식하게 된다
#그렇다면 값이 비어있는 집합 자료형은 어떻게 만들 수 있을까?


# In[60]:


#답지 풀이
a = set()
a


# In[61]:


type(a)


# In[53]:


#문제5 집합 추가
#다음과 같은 집합 자료형 a가 있다.
#a에 {"d" , "e" , "f"}를 추가하시오
a = {"a","b","c"}
a.update({"d" , "e" , "f"})
a

